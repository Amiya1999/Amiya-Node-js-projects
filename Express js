cd Desktop/Node/exp1.js
const path = require('path');

const express = require('express');
const bodyParser = require('body-parser');

const errorController=require('../controllers/error');

const app = express();

app.set('view engine', 'ejs');
app.set('views', 'views');

const adminRoutes = require('./routes/admin1');
const shopRoutes = require('./routes/shop.1');

app.use(bodyParser.urlencoded({ extended: false }));
app.use(express.static(path.join(__dirname, 'public')));

app.use('/admin', adminRoutes.routes);
app.use(shopRoutes);

app.use(errorController.get404);

app.listen(3000);


cd Desktop/Node/routes/admin1.js
const path = require('path');

const express = require('express');

const productsController=require('../controllers/products')

// const rootDir = require('../util/path');

const router = express.Router();


// /admin/add-product => GET
router.get('/add-product',productsController.getAddProduct);  

// /admin/add-product => POST
router.post('/add-product',productsController.postAddProduct);

module.exports=router;


cd Desktop/Node/routes/shop1.js
const path = require('path');

const express = require('express');

const productsController=require('../controllers/products');

const router = express.Router();

router.get('/', productsController.getProducts);

module.exports = router;


cd Desktop/Node/util/path.js
const path=require('path');

module.exports=path.dirname(process.mainModule.filename);


cd Desktop/Node/controllers/products.js
const products = [];
exports.getAddProduct=(req, res, next) => {
    res.render('add-product', {
      pageTitle: 'Add Product',
      path: '/admin/add-product',
      formsCSS: true,
      productCSS: true,
      activeAddProduct: true
    });
  };

  exports.postAddProduct=(req, res, next) => {
    products.push({ title: req.body.title });
    res.redirect('/');
  };

  exports.getAddProducts=(req, res, next) => {
    const products = adminData.products;
    res.render('shop', {
      prods: products,
      pageTitle: 'Shop',
      path: '/',
      hasProducts: products.length > 0,
      activeShop: true,
      productCSS: true
    });
  }
  
  
cd Desktop/Node/controllers/error.js
exports.get404=(req, res, next) => {
    res.status(404).render('404', { pageTitle: 'Page Not Found' });
  };

  
