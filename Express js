cd Desktop/Node/experiment.js
const path = require('path');

const express = require('express');
const bodyParser = require('body-parser');

const errorController=require('../controllers/error');

const app = express();

app.set('view engine', 'ejs');
app.set('views', 'views');

const adminRoutes = require('./routes/admin1');
const shopRoutes = require('./routes/shop.1');

app.use(bodyParser.urlencoded({ extended: false }));
app.use(express.static(path.join(__dirname, 'public')));

app.use('/admin', adminRoutes.routes);
app.use(shopRoutes);

app.use(errorController.get404);

app.listen(3000);


cd Desktop/Node/routes/admin1.js
const path = require('path');

const express = require('express');

const productsController=require('../controllers/products')

// const rootDir = require('../util/path');

const router = express.Router();


// /admin/add-product => GET
router.get('/add-product',productsController.getAddProduct);  

// /admin/add-product => POST
router.post('/add-product',productsController.postAddProduct);

module.exports=router;


cd Desktop/Node/routes/shop1.js
const p
const express = require('express');

const productsController=require('../controllers/products');
ath = require('path');

const router = express.Router();

router.get('/', productsController.getProducts);

module.exports = router;


cd Desktop/Node/util/path.js
const path=require('path');

module.exports=path.dirname(process.mainModule.filename);


cd Desktop/Node/controllers/products.js
const Product=require('../models/product');

exports.getAddProduct=(req, res, next) => {
    res.render('add-product', {
      pageTitle: 'Add Product',
      path: '/admin/add-product',
      formsCSS: true,
      productCSS: true,
      activeAddProduct: true
    });
  };

  exports.postAddProduct=(req, res, next) => {
      const product=new Product(req.body.title);
      product.save();
    res.redirect('/');
  };

  exports.getProducts(req,res,next)=>{
    Product.fetchAll(products=>{
      res.render('shop', {
        prods: products,
        pageTitle: 'Shop',
        path: '/',
        hasProducts: products.length > 0,
        activeShop: true,
        productCSS: true
    });
   
    });
  };
  
cd Desktop/Node/controllers/error.js
exports.get404=(req, res, next) => {
    res.status(404).render('404', { pageTitle: 'Page Not Found' });
  };

  cd Desktop/Node/models/products.js
const fs=require('fs');
const path=require('path');
module.exports=class Product{
  constructor(title) {
    this.title=title;
  }
save(){
    const path=path.join(path.dirname(process.mainModule.filename),'data','products.json');
    fs.readFile(p,(err,fileContent)=>{
      let products=[];
      if(!err){
        products=JSON.parse(fileContent);
      }
      products.push(this);
      fs.writeFile(p,JSON.stringify(products),(err)=>{
        console.log(err);
      });
    });
}
static fetchAll(cb){ 
  const path=path.join(path.dirname(process.mainModule.filename),'data','products.json');
  fs.readFile(p,(err,fileContent)=>{
    if(err){
    cb([]);
    }
cb(JSON.parse(fileContent));
  })
}
};
